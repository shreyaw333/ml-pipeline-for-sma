# k8s/ml-pipeline-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-ingestion
  namespace: instagram-ml-pipeline
  labels:
    app: data-ingestion
spec:
  replicas: 2
  selector:
    matchLabels:
      app: data-ingestion
  template:
    metadata:
      labels:
        app: data-ingestion
    spec:
      containers:
      - name: data-ingestion
        image: instagram-ml/data-ingestion:latest
        imagePullPolicy: Never
        env:
        - name: KAFKA_SERVERS
          value: "kafka-service:9092"
        - name: POSTS_PER_MINUTE
          value: "30"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import kafka; kafka.KafkaProducer(bootstrap_servers=['kafka-service:9092'])"
          initialDelaySeconds: 30
          periodSeconds: 30

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-processing
  namespace: instagram-ml-pipeline
  labels:
    app: data-processing
spec:
  replicas: 3
  selector:
    matchLabels:
      app: data-processing
  template:
    metadata:
      labels:
        app: data-processing
    spec:
      containers:
      - name: data-processing
        image: instagram-ml/data-processing:latest
        imagePullPolicy: Never
        env:
        - name: KAFKA_SERVERS
          value: "kafka-service:9092"
        - name: BATCH_SIZE
          value: "10"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: processed-data
          mountPath: /app/data/processed
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import kafka; kafka.KafkaConsumer(bootstrap_servers=['kafka-service:9092'])"
          initialDelaySeconds: 30
          periodSeconds: 30
      volumes:
      - name: processed-data
        emptyDir: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-training
  namespace: instagram-ml-pipeline
  labels:
    app: model-training
spec:
  replicas: 1
  selector:
    matchLabels:
      app: model-training
  template:
    metadata:
      labels:
        app: model-training
    spec:
      containers:
      - name: model-training
        image: instagram-ml/models:latest
        imagePullPolicy: Never
        env:
        - name: MODEL_RETRAIN_INTERVAL
          value: "3600"  # 1 hour
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: model-data
          mountPath: /app/data
      volumes:
      - name: model-data
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: data-ingestion-service
  namespace: instagram-ml-pipeline
spec:
  selector:
    app: data-ingestion
  ports:
  - port: 8000
    targetPort: 8000

---
apiVersion: v1
kind: Service
metadata:
  name: data-processing-service
  namespace: instagram-ml-pipeline
spec:
  selector:
    app: data-processing
  ports:
  - port: 8001
    targetPort: 8001

---
apiVersion: v1
kind: Service
metadata:
  name: model-training-service
  namespace: instagram-ml-pipeline
spec:
  selector:
    app: model-training
  ports:
  - port: 8002
    targetPort: 8002